{
  "name": "virtual-host",
  "description": "Virtual server host alternative to connect.vhost",
  "homepage": "https://github.com/bevacqua/virtual-host",
  "author": {
    "name": "Nicolas Bevacqua",
    "email": "nicolasbevacqua@gmail.com",
    "url": "http://www.ponyfoo.com"
  },
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/bevacqua/virtual-host.git"
  },
  "bugs": {
    "url": "https://github.com/bevacqua/virtual-host/issues"
  },
  "dependencies": {},
  "engines": {
    "node": "0.10.6",
    "npm": "1.2.x"
  },
  "readme": "# virtual-host\n\nCreate virtual, self-contained `connect` or `express` applications using a very simple API.\n\n## Install\n\nUse `npm`\n\n```bash\n$ npm install virtual-host --save\n```\n\nRequire\n\n```js\nvar vhost = require('virtual-host')(express);\n```\n\nYou can also `require` it with `connect`, if you are not using `express`.\n\n## API\n\n### #vhost(hostname)\n\nCreates an instance of `express` (or `connect`), and a middleware you can `.use` in your main application.\n\nYou can provide a `hostname`, which defaults to `'*'`, to further restrict the hostnames the virtual server will be used on. `hostname` is used to build a regular expression to test against `req.headers.host`, after stripping out the `port`. Stars `'*'` will be converted to `(.*)`. You can use any characters in this set: `[A-z_0-9.*-]`.\n\nYou can also just use a `RegExp` object as a `hostname` directly.\n\nExample hostnames:\n\n```js\nvhost('*')                // results in /^(.*)$/\nvhost('*.foo.com')        // results in /^(.*)\\.foo\\.com$/i\nvhost('www.*.com')        // results in /^www\\.(.*)\\.com$/i\nvhost(/^www\\.foo\\.com$/i) // results in /^www\\.foo\\.com$/i\n```\n\n### #vhost(hostname).off\n\nTurns off the middleware, it will automatically `.next` all future requests.\n\n```js\nvar express = require('express');\nvar vhost = require('virtual-host')(express);\nvar www = vhost('www.*');\n\n// configure www\n\napp.use(www);\n\nsomethingBadHappens(function(){\n    www.off(); // disable www\n});\n```\n\n### #vhost(hostname).on\n\nTurns on the middleware, it will start handling requests once again.\n\n```js\nvar express = require('express');\nvar vhost = require('virtual-host')(express);\nvar www = vhost('www.*');\n\n// configure www\n\napp.use(www);\n\nsomethingGoodHappens(function(){\n    www.on(); // re-enable www\n});\n```\n\n### #vhost(hostname).server\n\nExposes the `express` or `connect` instance used by this `vhost`.\n\n## Usage\n\n```js\nvar express = require('express');\nvar vhost = require('virtual-host')(express);\nvar app = express();\nvar www = vhost('www.*');\n\nwww.use(function(req,res,next){\n    console.log(req.url);\n\n    if(req.url === '/off'){\n        www.off();\n        res.send(500);\n    }else{\n        res.send(200);\n    }    \n});\n\napp.use(www);\n```",
  "readmeFilename": "README.md",
  "_id": "virtual-host@0.0.1",
  "dist": {
    "shasum": "f34b2a69999b5d6b4a354acbb4535fe02d878d47",
    "tarball": "http://registry.npmjs.org/virtual-host/-/virtual-host-0.0.1.tgz"
  },
  "_from": "virtual-host@",
  "_npmVersion": "1.2.23",
  "_npmUser": {
    "name": "bevacqua",
    "email": "nicolasbevacqua@gmail.com"
  },
  "maintainers": [
    {
      "name": "bevacqua",
      "email": "nicolasbevacqua@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "f34b2a69999b5d6b4a354acbb4535fe02d878d47",
  "_resolved": "https://registry.npmjs.org/virtual-host/-/virtual-host-0.0.1.tgz"
}
